// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpermListTest1.data.context;

#nullable disable

namespace SpermListTest1.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SpermListTest1.data.entites.fileDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("fileDetails");
                });

            modelBuilder.Entity("SpermListTest1.data.entites.sperm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<double>("DPR")
                        .HasColumnType("float");

                    b.Property<double>("FAT")
                        .HasColumnType("float");

                    b.Property<double>("FLC")
                        .HasColumnType("float");

                    b.Property<double>("ICC")
                        .HasColumnType("float");

                    b.Property<double>("LFM")
                        .HasColumnType("float");

                    b.Property<double>("LNM")
                        .HasColumnType("float");

                    b.Property<string>("MGS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MILK")
                        .HasColumnType("float");

                    b.Property<string>("NAAB_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<double>("PL")
                        .HasColumnType("float");

                    b.Property<double>("PRO")
                        .HasColumnType("float");

                    b.Property<double>("PTAT")
                        .HasColumnType("float");

                    b.Property<int>("RegNo")
                        .HasColumnType("int");

                    b.Property<double>("SCE")
                        .HasColumnType("float");

                    b.Property<string>("SIRE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TPI")
                        .HasColumnType("float");

                    b.Property<double>("UDC")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Sperms");
                });
#pragma warning restore 612, 618
        }
    }
}
